{
  "swagger": "2.0",
  "info": {
    "title": "My Dance Card API",
    "description": "Description",
    "version": "1.0.0"
  },
  "host": "",
  "basePath": "/",
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/stake": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/stake/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "age": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ward": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ward/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "age": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{email}": {
      "get": {
        "summary": "returns a users data",
        "description": "",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "user",
            "schema": {
              "$ref": "#/definitions/user"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "replaces a user in the db based on ID",
        "description": "replaces a user in the db based on ID",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "obj",
            "in": "body",
            "description": "Replace user info",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "deletes a user from the db based on email.",
        "description": "",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "post": {
        "summary": "add a user to the db",
        "description": "add a user to the db",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add a user",
            "schema": {
              "$ref": "#/definitions/user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/region": {
      "get": {
        "summary": "returns a region",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "region",
            "schema": {
              "$ref": "#/definitions/region"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/region/{regionId}": {
      "get": {
        "summary": "returns a region",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "region",
            "schema": {
              "$ref": "#/definitions/region"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/schedule/{regionId}": {
      "get": {
        "summary": "This is where you will find the dance schedules. ",
        "description": "Dances, where, when, and theme",
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error"
          },
          "": {
            "description": "Dance schedule",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dance"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/futureSchedule/{regionId}": {
      "get": {
        "summary": "Looking forward to a dance, look here.",
        "description": "Future dances",
        "parameters": [
          {
            "name": "regionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "": {
            "description": "Future Dance schedule",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/dance"
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/schedule": {
      "post": {
        "summary": "Add a dance",
        "description": "When, Where, Theme",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add a dance",
            "schema": {
              "$ref": "#/definitions/dance"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK"
          },
          "402": {
            "description": "Payment Required"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update changes to dance",
        "description": "Changes to dance are...",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Change a dance",
            "schema": {
              "$ref": "#/definitions/dance"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/schedule/{id}": {
      "delete": {
        "summary": "Deletes a dance schedule based on ID.",
        "description": "Deletes a dance schedule from the db based on ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Schedule"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}